// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vendre_pieces_auto.Data;

#nullable disable

namespace Vendre_pieces_auto.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Vendre_pieces_auto.Models.Tabels.Acheteur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Acheteur");
                });

            modelBuilder.Entity("Vendre_pieces_auto.Models.Tabels.Commande", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Acheteur")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Piece")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Vendeur")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Qantite")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Commande");
                });

            modelBuilder.Entity("Vendre_pieces_auto.Models.Tabels.Controleur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("controleur");
                });

            modelBuilder.Entity("Vendre_pieces_auto.Models.Tabels.Facture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Acheteur")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Commande")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Vendeur")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Id_Acheteur");

                    b.HasIndex("Id_Commande");

                    b.HasIndex("Id_Vendeur");

                    b.ToTable("Facture");
                });

            modelBuilder.Entity("Vendre_pieces_auto.Models.Tabels.Piece", b =>
                {
                    b.Property<Guid>("Id_piece")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_vendeur")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom_piece")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantite_stock")
                        .HasColumnType("int");

                    b.Property<string>("Type_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_piece");

                    b.HasIndex("Id_vendeur");

                    b.ToTable("Piece");
                });

            modelBuilder.Entity("Vendre_pieces_auto.Models.Tabels.Vendeur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vendeur");
                });

            modelBuilder.Entity("Vendre_pieces_auto.Models.Tabels.Facture", b =>
                {
                    b.HasOne("Vendre_pieces_auto.Models.Tabels.Acheteur", "Acheteur")
                        .WithMany()
                        .HasForeignKey("Id_Acheteur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vendre_pieces_auto.Models.Tabels.Commande", "Commande")
                        .WithMany()
                        .HasForeignKey("Id_Commande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vendre_pieces_auto.Models.Tabels.Vendeur", "Vendeur")
                        .WithMany()
                        .HasForeignKey("Id_Vendeur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acheteur");

                    b.Navigation("Commande");

                    b.Navigation("Vendeur");
                });

            modelBuilder.Entity("Vendre_pieces_auto.Models.Tabels.Piece", b =>
                {
                    b.HasOne("Vendre_pieces_auto.Models.Tabels.Vendeur", "Vendeur")
                        .WithMany()
                        .HasForeignKey("Id_vendeur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendeur");
                });
#pragma warning restore 612, 618
        }
    }
}
